{"version":3,"file":"static/js/815.013ee653.chunk.js","mappings":"8OACA,G,gBAAyB,wBAAzB,EAA0D,wBAA1D,EAA0F,sBAA1F,EAAyH,uBAAzH,EAAuJ,qBAAvJ,EAAmL,qBAAnL,EAAgN,sBAAhN,EAA6O,qB,iDCmG7O,GAAeA,EAAAA,EAAAA,KAnFE,WACf,IAAMC,EChBgB,WACtB,IAAMA,GAAQC,EAAAA,EAAAA,KAAmB,WAC/B,MAAO,CACLC,WAAW,EACXC,MAAO,GACPC,QAAS,GACTC,MAAO,GACPC,SAAU,GAEVC,aAAY,SAAAC,GAAmB,IAAhBC,EAAKD,EAALC,MAAOC,EAAIF,EAAJE,KACpBV,EAAMU,GAAQD,CAChB,EAEJ,IAEA,OAAOT,CACT,CDAgBW,GACRC,GAAWC,EAAAA,EAAAA,MAEjB,OACEC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,MAAA,UAAQG,UAAWC,EAAcF,SAAA,EAC7BG,EAAAA,EAAAA,KAAA,OAAKC,IAAKC,EAAAA,EAAMC,IAAI,2FACpBH,EAAAA,EAAAA,KAACI,EAAAA,EAAM,CACHC,KAAK,SACLC,QAAQ,UACRC,KAAK,IACLC,SAAU3B,EAAME,UAChB0B,QAAS,SAACC,GAAC,OAAGjB,EAAS,IAAI,EAACI,SAE3BhB,EAAME,UAAY,UAAY,uCAGvCY,EAAAA,EAAAA,MAAA,QAAMG,UAAWC,EAAeF,SAAA,EAC5BG,EAAAA,EAAAA,KAAA,MAAIF,UAAWC,EAAaF,SAAC,0KAC7BF,EAAAA,EAAAA,MAACS,EAAAA,EAAM,CACHN,UAAWC,EACXM,KAAK,SACLC,QAAQ,QACRC,KAAK,IACLC,SAAU3B,EAAME,UAAUc,SAAA,EAE1BG,EAAAA,EAAAA,KAAA,OAAKF,UAAWC,EAAaE,IAAKU,EAAAA,EAAYR,IAAI,wEACjDtB,EAAME,UAAY,UAAY,gHAEnCY,EAAAA,EAAAA,MAACS,EAAAA,EAAM,CACHN,UAAWC,EACXM,KAAK,SACLC,QAAQ,QACRC,KAAK,IACLC,SAAU3B,EAAME,UAAUc,SAAA,EAE1BG,EAAAA,EAAAA,KAAA,OAAKF,UAAWC,EAAaE,IAAKW,EAAAA,EAAYT,IAAI,wEACjDtB,EAAME,UAAY,UAAY,gHAEnCY,EAAAA,EAAAA,MAACS,EAAAA,EAAM,CACHN,UAAWC,EACXM,KAAK,SACLC,QAAQ,QACRC,KAAK,IACLC,SAAU3B,EAAME,UAAUc,SAAA,EAE1BG,EAAAA,EAAAA,KAAA,OAAKF,UAAWC,EAAaE,IAAKY,EAAAA,EAAWV,IAAI,wEAChDtB,EAAME,UAAY,UAAY,+GAEnCiB,EAAAA,EAAAA,KAAA,KAAGF,UAAWC,EAAYF,SAAC,wBAC3BG,EAAAA,EAAAA,KAACc,EAAAA,EAAK,CACFT,KAAK,OACLd,KAAK,QACLD,MAAOT,EAAMK,MACb6B,YAAY,2GACZC,UAAQ,EACRC,QAASpC,EAAMO,gBAEnBY,EAAAA,EAAAA,KAACc,EAAAA,EAAK,CACFhB,UAAWC,EACXM,KAAK,WACLd,KAAK,WACLD,MAAOT,EAAMM,SACb4B,YAAY,uCACZC,UAAQ,EACRC,QAASpC,EAAMO,gBAEnBY,EAAAA,EAAAA,KAACI,EAAAA,EAAM,CACHN,UAAWC,EACXM,KAAK,SACLC,QAAQ,UACRC,KAAK,IACLC,SAAU3B,EAAME,UAAUc,SAEzBhB,EAAME,UAAY,UAAY,oCAEnCiB,EAAAA,EAAAA,KAAA,KAAGF,UAAWC,EAAamB,KAAK,IAAGrB,SAAC,iLAI9C,G","sources":["webpack://conversation-exchange-frontend/./src/pages/Register/styles.module.css?7e62","pages/Register/Register.jsx","pages/Register/model.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"header\":\"styles_header__Hyr-E\",\"content\":\"styles_content__S3YNi\",\"title\":\"styles_title__lrcb4\",\"button\":\"styles_button__g-X+R\",\"logo\":\"styles_logo__vDk+Q\",\"text\":\"styles_text__vuebT\",\"input\":\"styles_input__jYd+R\",\"link\":\"styles_link__iZDfE\"};","import { observer } from \"mobx-react-lite\";\nimport { useNavigate } from 'react-router-dom';\n\nimport { Input } from \"../../components/ui/Input\";\nimport { Button } from \"../../components/ui/Button\";\n\nimport { Header } from \"../../components/Header/Header\";\nimport { Footer } from \"../../components/Footer/Footer\";\n\nimport styles from \"./styles.module.css\";\nimport { useModel } from \"./model\";\n\nimport logo from \"../../images/svg/logo.svg\";\nimport googleLogo from \"../../images/svg/logo-google.svg\";\nimport yandexLogo from \"../../images/svg/logo-yandex.svg\";\nimport weiboLogo from \"../../images/svg/logo-weibo.svg\";\n\nconst Register = () => {\n  const model = useModel();\n  const navigate = useNavigate();\n\n  return (\n    <>\n      <header className={styles.header}>\n          <img src={logo} alt=\"Логотип проекта\"/>\n          <Button\n              type=\"submit\"\n              variant=\"primary\"\n              size=\"s\"\n              disabled={model.isLoading}\n              onClick={(e)=>navigate('/')}\n          >\n              {model.isLoading ? \"Loading\" : \"Войти\"}\n          </Button>\n      </header>\n      <main className={styles.content}>\n          <h1 className={styles.title}>Зарегистрироваться при помощи</h1>\n          <Button\n              className={styles.button}\n              type=\"submit\"\n              variant=\"white\"\n              size=\"l\"\n              disabled={model.isLoading}\n          >\n              <img className={styles.logo} src={googleLogo} alt=\"Логотип гугл\"/>\n              {model.isLoading ? \"Loading\" : \"Вход через аккаунт Google\"}\n          </Button>\n          <Button\n              className={styles.button}\n              type=\"submit\"\n              variant=\"white\"\n              size=\"l\"\n              disabled={model.isLoading}\n          >\n              <img className={styles.logo} src={yandexLogo} alt=\"Логотип гугл\"/>\n              {model.isLoading ? \"Loading\" : \"Вход через аккаунт Yandex\"}\n          </Button>\n          <Button\n              className={styles.button}\n              type=\"submit\"\n              variant=\"white\"\n              size=\"l\"\n              disabled={model.isLoading}\n          >\n              <img className={styles.logo} src={weiboLogo} alt=\"Логотип гугл\"/>\n              {model.isLoading ? \"Loading\" : \"Вход через аккаунт Weibo\"}\n          </Button>\n          <p className={styles.text}>или</p>\n          <Input\n              type=\"text\"\n              name=\"email\"\n              value={model.email}\n              placeholder=\"Email или номер телефона\"\n              required\n              onValue={model.handleChange}\n          />\n          <Input\n              className={styles.input}\n              type=\"password\"\n              name=\"password\"\n              value={model.password}\n              placeholder=\"Пароль\"\n              required\n              onValue={model.handleChange}\n          />\n          <Button\n              className={styles.button}\n              type=\"submit\"\n              variant=\"primary\"\n              size=\"m\"\n              disabled={model.isLoading}\n          >\n              {model.isLoading ? \"Loading\" : \"Войти\"}\n          </Button>\n          <a className={styles.link} href=\"#\">Не можешь вспомнить свой пароль?</a>\n      </main>\n    </>\n  );\n};\n\nexport default observer(Register);\n","import { useLocalObservable } from \"mobx-react-lite\";\n\nexport const useModel = () => {\n  const model = useLocalObservable(() => {\n    return {\n      isLoading: false,\n      error: \"\",\n      message: \"\",\n      email: \"\",\n      password: \"\",\n\n      handleChange({ value, name }) {\n        model[name] = value;\n      },\n    };\n  });\n\n  return model;\n};\n"],"names":["observer","model","useLocalObservable","isLoading","error","message","email","password","handleChange","_ref","value","name","useModel","navigate","useNavigate","_jsxs","_Fragment","children","className","styles","_jsx","src","logo","alt","Button","type","variant","size","disabled","onClick","e","googleLogo","yandexLogo","weiboLogo","Input","placeholder","required","onValue","href"],"sourceRoot":""}